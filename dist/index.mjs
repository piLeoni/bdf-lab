var E={$schema:"http://json-schema.org/draft-07/schema#",properties:{BBX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},BITMAP:{items:{type:"string"},type:"array"},DWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},DWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},ENCODING:{type:"number"},ENDCHAR:{type:"string"},STARTCHAR:{type:"string"},SWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},SWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},VVECTOR:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"}},type:"object"};var I={$schema:"http://json-schema.org/draft-07/schema#",definitions:{BDFCharacter:{properties:{BBX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},BITMAP:{items:{type:"string"},type:"array"},DWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},DWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},ENCODING:{type:"number"},ENDCHAR:{type:"string"},STARTCHAR:{type:"string"},SWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},SWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},VVECTOR:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"}},type:"object"},BDFMetadata:{properties:{CHARSET_COLLECTIONS:{type:"string"},CHARSET_ENCODING:{type:"string"},CHARSET_REGISTRY:{type:"string"},COMMENT:{type:"string"},CONTENTVERSION:{type:"number"},FONT:{type:"string"},FONTBOUNDINGBOX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},FONTNAME_REGISTRY:{type:"string"},METRICSET:{enum:[0,1,2],type:"number"},SIZE:{items:[{type:"number"},{type:"number"},{type:"number"}],maxItems:3,minItems:3,type:"array"},STARTFONT:{type:"string"}},type:"object"},BDFProperties:{properties:{ADD_STYLE_NAME:{type:"string"},AVERAGE_WIDTH:{type:"number"},AVG_LOWERCASE_WIDTH:{type:"number"},AVG_UPPERCASE_WIDTH:{type:"number"},CAP_HEIGHT:{type:"number"},COPYRIGHT:{type:"string"},DEFAULT_CHAR:{type:"number"},FACE_NAME:{type:"string"},FAMILY_NAME:{type:"string"},FIGURE_WIDTH:{type:"number"},FONT_ASCENT:{type:"number"},FONT_DESCENT:{type:"number"},FONT_NAME:{type:"string"},FONT_VERSION:{type:"string"},FOUNDRY:{type:"string"},NORM_SPACE:{type:"number"},NOTICE:{type:"string"},PIXEL_SIZE:{type:"number"},POINT_SIZE:{type:"number"},RAW_ASCENT:{type:"number"},RAW_DESCENT:{type:"number"},RELATIVE_SETWIDTH:{type:"number"},RELATIVE_WEIGHT:{type:"number"},RESOLUTION_X:{type:"number"},RESOLUTION_Y:{type:"number"},SETWIDTH_NAME:{type:"string"},SLANT:{type:"string"},SPACING:{type:"string"},SUBSCRIPT_SIZE:{type:"number"},SUBSCRIPT_X:{type:"number"},SUBSCRIPT_Y:{type:"number"},SUPERSCRIPT_SIZE:{type:"number"},SUPERSCRIPT_X:{type:"number"},SUPERSCRIPT_Y:{type:"number"},UNDERLINE_POSITION:{type:"number"},UNDERLINE_THICKNESS:{type:"number"},WEIGHT_NAME:{type:"string"},X_HEIGHT:{type:"number"},_OTF_FONTFILE:{type:"string"},_OTF_PSNAME:{type:"string"}},type:"object"}},properties:{CHARS:{type:"number"},ENDFONT:{type:"string"},ENDPROPERTIES:{type:"string"},STARTPROPERTIES:{type:"string"},characters:{items:{$ref:"#/definitions/BDFCharacter"},type:"array"},metadata:{$ref:"#/definitions/BDFMetadata"},properties:{$ref:"#/definitions/BDFProperties"}},type:"object"};var T={$schema:"http://json-schema.org/draft-07/schema#",properties:{CHARSET_COLLECTIONS:{type:"string"},CHARSET_ENCODING:{type:"string"},CHARSET_REGISTRY:{type:"string"},COMMENT:{type:"string"},CONTENTVERSION:{type:"number"},FONT:{type:"string"},FONTBOUNDINGBOX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},FONTNAME_REGISTRY:{type:"string"},METRICSET:{enum:[0,1,2],type:"number"},SIZE:{items:[{type:"number"},{type:"number"},{type:"number"}],maxItems:3,minItems:3,type:"array"},STARTFONT:{type:"string"}},type:"object"};var u={$schema:"http://json-schema.org/draft-07/schema#",properties:{ADD_STYLE_NAME:{type:"string"},AVERAGE_WIDTH:{type:"number"},AVG_LOWERCASE_WIDTH:{type:"number"},AVG_UPPERCASE_WIDTH:{type:"number"},CAP_HEIGHT:{type:"number"},COPYRIGHT:{type:"string"},DEFAULT_CHAR:{type:"number"},FACE_NAME:{type:"string"},FAMILY_NAME:{type:"string"},FIGURE_WIDTH:{type:"number"},FONT_ASCENT:{type:"number"},FONT_DESCENT:{type:"number"},FONT_NAME:{type:"string"},FONT_VERSION:{type:"string"},FOUNDRY:{type:"string"},NORM_SPACE:{type:"number"},NOTICE:{type:"string"},PIXEL_SIZE:{type:"number"},POINT_SIZE:{type:"number"},RAW_ASCENT:{type:"number"},RAW_DESCENT:{type:"number"},RELATIVE_SETWIDTH:{type:"number"},RELATIVE_WEIGHT:{type:"number"},RESOLUTION_X:{type:"number"},RESOLUTION_Y:{type:"number"},SETWIDTH_NAME:{type:"string"},SLANT:{type:"string"},SPACING:{type:"string"},SUBSCRIPT_SIZE:{type:"number"},SUBSCRIPT_X:{type:"number"},SUBSCRIPT_Y:{type:"number"},SUPERSCRIPT_SIZE:{type:"number"},SUPERSCRIPT_X:{type:"number"},SUPERSCRIPT_Y:{type:"number"},UNDERLINE_POSITION:{type:"number"},UNDERLINE_THICKNESS:{type:"number"},WEIGHT_NAME:{type:"string"},X_HEIGHT:{type:"number"},_OTF_FONTFILE:{type:"string"},_OTF_PSNAME:{type:"string"}},type:"object"};var a=class{constructor(){this._outputFile={metadata:{},properties:{},characters:[]};this._parseCharMode=!1;this._parseCharBitmapMode=!1;this._tmpChar={BITMAP:[]};this.parse=t=>{let p;return typeof Buffer!="undefined"&&t instanceof Buffer?p=t.toString("utf-8"):p=new TextDecoder("utf-8").decode(t),p.split(`
`).forEach(this._parseLine.bind(this)),this._outputFile};this._parseLine=t=>{t.startsWith("STARTCHAR")&&(this._parseCharMode=!0),t.startsWith("ENDCHAR")&&(this._parseCharMode=!1,this._parseCharBitmapMode=!1,this._outputFile.characters.push(this._tmpChar),this._tmpChar={BITMAP:[]}),this._parseCharMode?this._parseChar(t):(this._parseValue({line:t,target:this._outputFile,schema:I.properties,ignore:["STARTPROPERTIES","ENDPROPERTIES","ENDFONT"]}),this._parseValue({line:t,target:this._outputFile.metadata,schema:T.properties,ignore:["COMMENT"]}),this._parseValue({line:t,target:this._outputFile.properties,schema:u.properties}))};this._parseValue=({line:t,target:p,schema:r,ignore:m})=>{let[e,...s]=t.split(" ");if(!(m!=null&&m.includes(e))&&e in r){let n=s.join(" ");if(n.startsWith('"')&&n.endsWith('"')&&(n=n.slice(1,-1)),"minItems"in r[e]&&r[e].minItems>s.length)throw new Error(`${e} is supposed to contain at least ${r[e].minItems} values but has ${s.length}`);if("maxItems"in r[e]&&r[e].maxItems<s.length)throw new Error(`${e} is supposed to contain no more than ${r[e].maxItems} values but has ${s.length}`);r[e].type==="array"?(p[e]=[],s.forEach((i,y)=>{r[e].items[y].type==="number"&&p[e].push(parseFloat(i)),r[e].items[y].type==="string"&&p[e].push(i.replace(/["\r]/g,""))})):(r[e].type==="number"&&(p[e]=parseFloat(n)),r[e].type==="string"&&(p[e]=n.replace(/["\r]/g,"")))}};this._parseChar=t=>{var p;if(t.startsWith("BITMAP")){this._parseCharBitmapMode=!0;return}this._parseCharBitmapMode?(p=this._tmpChar.BITMAP)==null||p.push(t):this._parseValue({line:t,target:this._tmpChar,schema:E.properties,ignore:["BITMAP","ENDCHAR"]})}}};export{a as BDFParser};
