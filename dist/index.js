"use strict";var a=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var o=Object.prototype.hasOwnProperty;var R=(n,e)=>{for(var r in e)a(n,r,{get:e[r],enumerable:!0})},C=(n,e,r,p)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of N(e))!o.call(n,s)&&s!==r&&a(n,s,{get:()=>e[s],enumerable:!(p=S(e,s))||p.enumerable});return n};var A=n=>C(a({},"__esModule",{value:!0}),n);var F={};R(F,{BDFParser:()=>y});module.exports=A(F);var T={$schema:"http://json-schema.org/draft-07/schema#",properties:{BBX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},BITMAP:{items:{type:"string"},type:"array"},DWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},DWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},ENCODING:{type:"number"},ENDCHAR:{type:"string"},STARTCHAR:{type:"string"},SWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},SWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},VVECTOR:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"}},type:"object"};var u={$schema:"http://json-schema.org/draft-07/schema#",definitions:{BDFCharacter:{properties:{BBX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},BITMAP:{items:{type:"string"},type:"array"},DWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},DWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},ENCODING:{type:"number"},ENDCHAR:{type:"string"},STARTCHAR:{type:"string"},SWIDTH:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},SWIDTH1:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"},VVECTOR:{items:[{type:"number"},{type:"number"}],maxItems:2,minItems:2,type:"array"}},type:"object"},BDFMetadata:{properties:{CHARSET_COLLECTIONS:{type:"string"},CHARSET_ENCODING:{type:"string"},CHARSET_REGISTRY:{type:"string"},COMMENT:{type:"string"},CONTENTVERSION:{type:"number"},FONT:{type:"string"},FONTBOUNDINGBOX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},FONTNAME_REGISTRY:{type:"string"},METRICSET:{enum:[0,1,2],type:"number"},SIZE:{items:[{type:"number"},{type:"number"},{type:"number"}],maxItems:3,minItems:3,type:"array"},STARTFONT:{type:"string"}},type:"object"},BDFProperties:{properties:{ADD_STYLE_NAME:{type:"string"},AVERAGE_WIDTH:{type:"number"},AVG_LOWERCASE_WIDTH:{type:"number"},AVG_UPPERCASE_WIDTH:{type:"number"},CAP_HEIGHT:{type:"number"},COPYRIGHT:{type:"string"},DEFAULT_CHAR:{type:"number"},FACE_NAME:{type:"string"},FAMILY_NAME:{type:"string"},FIGURE_WIDTH:{type:"number"},FONT_ASCENT:{type:"number"},FONT_DESCENT:{type:"number"},FONT_NAME:{type:"string"},FONT_VERSION:{type:"string"},FOUNDRY:{type:"string"},NORM_SPACE:{type:"number"},NOTICE:{type:"string"},PIXEL_SIZE:{type:"number"},POINT_SIZE:{type:"number"},RAW_ASCENT:{type:"number"},RAW_DESCENT:{type:"number"},RELATIVE_SETWIDTH:{type:"number"},RELATIVE_WEIGHT:{type:"number"},RESOLUTION_X:{type:"number"},RESOLUTION_Y:{type:"number"},SETWIDTH_NAME:{type:"string"},SLANT:{type:"string"},SPACING:{type:"string"},SUBSCRIPT_SIZE:{type:"number"},SUBSCRIPT_X:{type:"number"},SUBSCRIPT_Y:{type:"number"},SUPERSCRIPT_SIZE:{type:"number"},SUPERSCRIPT_X:{type:"number"},SUPERSCRIPT_Y:{type:"number"},UNDERLINE_POSITION:{type:"number"},UNDERLINE_THICKNESS:{type:"number"},WEIGHT_NAME:{type:"string"},X_HEIGHT:{type:"number"},_OTF_FONTFILE:{type:"string"},_OTF_PSNAME:{type:"string"}},type:"object"}},properties:{CHARS:{type:"number"},ENDFONT:{type:"string"},ENDPROPERTIES:{type:"string"},STARTPROPERTIES:{type:"string"},characters:{items:{$ref:"#/definitions/BDFCharacter"},type:"array"},metadata:{$ref:"#/definitions/BDFMetadata"},properties:{$ref:"#/definitions/BDFProperties"}},type:"object"};var _={$schema:"http://json-schema.org/draft-07/schema#",properties:{CHARSET_COLLECTIONS:{type:"string"},CHARSET_ENCODING:{type:"string"},CHARSET_REGISTRY:{type:"string"},COMMENT:{type:"string"},CONTENTVERSION:{type:"number"},FONT:{type:"string"},FONTBOUNDINGBOX:{items:[{type:"number"},{type:"number"},{type:"number"},{type:"number"}],maxItems:4,minItems:4,type:"array"},FONTNAME_REGISTRY:{type:"string"},METRICSET:{enum:[0,1,2],type:"number"},SIZE:{items:[{type:"number"},{type:"number"},{type:"number"}],maxItems:3,minItems:3,type:"array"},STARTFONT:{type:"string"}},type:"object"};var b={$schema:"http://json-schema.org/draft-07/schema#",properties:{ADD_STYLE_NAME:{type:"string"},AVERAGE_WIDTH:{type:"number"},AVG_LOWERCASE_WIDTH:{type:"number"},AVG_UPPERCASE_WIDTH:{type:"number"},CAP_HEIGHT:{type:"number"},COPYRIGHT:{type:"string"},DEFAULT_CHAR:{type:"number"},FACE_NAME:{type:"string"},FAMILY_NAME:{type:"string"},FIGURE_WIDTH:{type:"number"},FONT_ASCENT:{type:"number"},FONT_DESCENT:{type:"number"},FONT_NAME:{type:"string"},FONT_VERSION:{type:"string"},FOUNDRY:{type:"string"},NORM_SPACE:{type:"number"},NOTICE:{type:"string"},PIXEL_SIZE:{type:"number"},POINT_SIZE:{type:"number"},RAW_ASCENT:{type:"number"},RAW_DESCENT:{type:"number"},RELATIVE_SETWIDTH:{type:"number"},RELATIVE_WEIGHT:{type:"number"},RESOLUTION_X:{type:"number"},RESOLUTION_Y:{type:"number"},SETWIDTH_NAME:{type:"string"},SLANT:{type:"string"},SPACING:{type:"string"},SUBSCRIPT_SIZE:{type:"number"},SUBSCRIPT_X:{type:"number"},SUBSCRIPT_Y:{type:"number"},SUPERSCRIPT_SIZE:{type:"number"},SUPERSCRIPT_X:{type:"number"},SUPERSCRIPT_Y:{type:"number"},UNDERLINE_POSITION:{type:"number"},UNDERLINE_THICKNESS:{type:"number"},WEIGHT_NAME:{type:"string"},X_HEIGHT:{type:"number"},_OTF_FONTFILE:{type:"string"},_OTF_PSNAME:{type:"string"}},type:"object"};var y=class{constructor(){this._outputFile={metadata:{},properties:{},characters:[]};this._parseCharMode=!1;this._parseCharBitmapMode=!1;this._tmpChar={BITMAP:[]};this.parse=e=>{let r;return typeof Buffer!="undefined"&&e instanceof Buffer?r=e.toString("utf-8"):r=new TextDecoder("utf-8").decode(e),r.split(`
`).forEach(this._parseLine.bind(this)),this._outputFile};this._parseLine=e=>{e.startsWith("STARTCHAR")&&(this._parseCharMode=!0),e.startsWith("ENDCHAR")&&(this._parseCharMode=!1,this._parseCharBitmapMode=!1,this._outputFile.characters.push(this._tmpChar),this._tmpChar={BITMAP:[]}),this._parseCharMode?this._parseChar(e):(this._parseValue({line:e,target:this._outputFile,schema:u.properties,ignore:["STARTPROPERTIES","ENDPROPERTIES","ENDFONT"]}),this._parseValue({line:e,target:this._outputFile.metadata,schema:_.properties,ignore:["COMMENT"]}),this._parseValue({line:e,target:this._outputFile.properties,schema:b.properties}))};this._parseValue=({line:e,target:r,schema:p,ignore:s})=>{let[t,...m]=e.split(" ");if(!(s!=null&&s.includes(t))&&t in p){let i=m.join(" ");if(i.startsWith('"')&&i.endsWith('"')&&(i=i.slice(1,-1)),"minItems"in p[t]&&p[t].minItems>m.length)throw new Error(`${t} is supposed to contain at least ${p[t].minItems} values but has ${m.length}`);if("maxItems"in p[t]&&p[t].maxItems<m.length)throw new Error(`${t} is supposed to contain no more than ${p[t].maxItems} values but has ${m.length}`);p[t].type==="array"?(r[t]=[],m.forEach((E,I)=>{p[t].items[I].type==="number"&&r[t].push(parseFloat(E)),p[t].items[I].type==="string"&&r[t].push(E.replace(/["\r]/g,""))})):(p[t].type==="number"&&(r[t]=parseFloat(i)),p[t].type==="string"&&(r[t]=i.replace(/["\r]/g,"")))}};this._parseChar=e=>{var r;if(e.startsWith("BITMAP")){this._parseCharBitmapMode=!0;return}this._parseCharBitmapMode?(r=this._tmpChar.BITMAP)==null||r.push(e):this._parseValue({line:e,target:this._tmpChar,schema:T.properties,ignore:["BITMAP","ENDCHAR"]})}}};0&&(module.exports={BDFParser});
